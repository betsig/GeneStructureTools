% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/quickAnalysis.R
\name{transcriptChangeSummary}
\alias{transcriptChangeSummary}
\title{Compare open reading frames for two sets of paired transcripts}
\usage{
transcriptChangeSummary(transcriptsX, transcriptsY, BSgenome, gtf.exons,
  NMD = FALSE, compareBy = "gene", orfPrediction = "allFrames",
  compareToGene = FALSE, whippetEvents = NULL)
}
\arguments{
\item{transcriptsX}{GRanges object with exon annotations for
all transcripts to be compared for the 'normal' condition}

\item{transcriptsY}{GRanges object with exon annotations for
all transcripts to be compared for the 'alternative' condition}

\item{BSgenome}{BSGenome object containing the genome for the species analysed}

\item{gtf.exons}{GRanges object made from a GTF containing exon coordinates}

\item{NMD}{Use NMD predictions? (Note: notNMD must be installed to use this feature)}

\item{compareBy}{compare isoforms by 'transcript' id, or aggregate all changes occuring by 'gene'}

\item{orfPrediction}{What type of orf predictions to return. default: "allFrames"}

\item{compareToGene}{compare alternative isoforms to all normal gene isoforms (in gtf.exons)}

\item{whippetEvents}{events generated by readWhippetDIFFfiles().
Use if PSI directionality should be taken into account when comparing isoforms.}
}
\value{
Summarised ORF changes data.frame
}
\description{
Compare open reading frames for two sets of paired transcripts
}
\examples{
whippetFiles <- list.files(system.file("extdata","whippet/",
package = "GeneStructureTools"), full.names = TRUE)
diffFiles <- whippetFiles[grep(".diff", whippetFiles)]
whippetDiffSplice <- readWhippetDIFFfiles(diffFiles)
whippetCoords <- formatWhippetEvents(whippetDiffSplice)
gtf <- rtracklayer::import(system.file("extdata","example_gtf.gtf",
package = "GeneStructureTools"))
gtf.exons <- gtf[gtf$type=="exon"]
gtf.transcripts <- gtf[gtf$type=="transcript"]
g <- BSgenome.Mmusculus.UCSC.mm10::BSgenome.Mmusculus.UCSC.mm10
event.exonSkip <- whippetDiffSplice[which(whippetDiffSplice$type=="CE")[1],]
coords.exonSkip <- whippetCoords[whippetCoords$id \%in\% event.exonSkip$coord]
exons.exonSkip <- findExonContainingTranscripts(coords.exonSkip, gtf.exons,
variableWidth=0, findIntrons=FALSE, gtf.transcripts)
ExonSkippingTranscripts <- skipExonInTranscript(coords.exonSkip, exons.exonSkip, gtf.exons)
transcriptChangeSummary(ExonSkippingTranscripts[ExonSkippingTranscripts$set=="included_exon"],
ExonSkippingTranscripts[ExonSkippingTranscripts$set=="skipped_exon"],
BSgenome=g,gtf.exons)
}
\author{
Beth Signal
}
