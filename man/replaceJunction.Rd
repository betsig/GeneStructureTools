% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AltSplicingJunctionSupported.R
\name{replaceJunction}
\alias{replaceJunction}
\title{Find transcripts containing/overlapping junctions and replace them with alternative junctions}
\usage{
replaceJunction(junctionPairs, eventCoords, gtf.exons, type = NA)
}
\arguments{
\item{junctionPairs}{GRanges object with alternative Whippet junctions.
Generated by findJunctionPairs()}

\item{eventCoords}{GRanges object with Whippet event coordinates}

\item{gtf.exons}{GRanges object made from a GTF containing exon coordinates}

\item{type}{type of Whippet event (AA/AD/AF/AL).
Note only one event type should be processed at a time.}
}
\value{
GRanges object with transcripts containing alternative junctions.
}
\description{
Find transcripts containing/overlapping junctions and replace them with alternative junctions
}
\examples{
whippetFiles <- list.files(system.file("extdata","whippet/",
package = "GeneStructureTools"), full.names = TRUE)
jncFiles <- whippetFiles[grep(".jnc", whippetFiles)]
whippetJNC <- readWhippetJNCfiles(jncFiles)
junctionCoords <- formatJunctions(whippetJNC)
diffFiles <- whippetFiles[grep(".diff", whippetFiles)]
whippetDiffSplice <- readWhippetDIFFfiles(diffFiles)
whippetCoords <- formatWhippetEvents(whippetDiffSplice)
gtf <- rtracklayer::import(system.file("extdata","example_gtf.gtf",
package = "GeneStructureTools"))
gtf.exons <- gtf[gtf$type=="exon"]

event.altAce <- whippetDiffSplice[which(whippetDiffSplice$type=="AA")[1],]
coords.altAce <- whippetCoords[whippetCoords$id \%in\% event.altAce$coord]
jncPairs.altAce <- findJunctionPairs(coords.altAce,junctionCoords, type="AA")
transcripts.altAce <- replaceJunction(jncPairs.altAce, coords.altAce, gtf.exons, type="AA")
event.altDon <- whippetDiffSplice[which(whippetDiffSplice$type=="AD")[1],]
coords.altDon <- whippetCoords[whippetCoords$id \%in\% event.altDon$coord]
jncPairs.altDon <- findJunctionPairs(coords.altDon,junctionCoords, type="AD")
transcripts.altDon <- replaceJunction(jncPairs.altDon, coords.altDon, gtf.exons, type="AD")

event.altFirst <- whippetDiffSplice[which(whippetDiffSplice$type=="AF")[1],]
coords.altFirst <- whippetCoords[whippetCoords$id \%in\% event.altFirst$coord]
jncPairs.altFirst <- findJunctionPairs(coords.altFirst,junctionCoords, type="AF")
transcripts.altFirst <- replaceJunction(jncPairs.altFirst,
coords.altFirst, gtf.exons, type="AF")

event.altLast <- whippetDiffSplice[which(whippetDiffSplice$type=="AL")[1],]
coords.altLast <- whippetCoords[whippetCoords$id \%in\% event.altLast$coord]
jncPairs.altLast <- findJunctionPairs(coords.altLast,junctionCoords, type="AL")
transcripts.altLast <- replaceJunction(jncPairs.altLast, coords.altLast,
gtf.exons, type="AL")

}
\author{
Beth Signal
}
